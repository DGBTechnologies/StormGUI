{
  "py/object": "markov_model.MarkovModel.MarkovModel",
  "id": "95919d3f-4cd7-4e17-8994-cd59ce058edc",
  "name": "polling",
  "type": "ma",
  "comment": "Polling-system using two queues and a server as presented in https://doi.org/10.1007/978-3-642-32940-1_26",
  "features": [],
  "restrictInitial": {
    "py/tuple": [
      "",
      []
    ]
  },
  "constants": [
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "b7e8b842-7b32-43a1-873c-b21631be1905",
      "name": "N",
      "type": "int",
      "bounded": true,
      "lowerBound": [
        "1",
        [
          {
            "type": "nc",
            "lexeme": "1"
          }
        ]
      ],
      "upperBound": [
        "6",
        [
          {
            "type": "nc",
            "lexeme": "6"
          }
        ]
      ],
      "value": [
        "",
        []
      ],
      "comment": "Number of job types"
    },
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "6ea6a586-27c5-4b45-970c-dedf9eb4118c",
      "name": "Q",
      "type": "int",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "value": [
        "",
        []
      ],
      "comment": "Capacity of each queue"
    },
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "6496a21c-96e7-4e16-ad07-fdbaf1eea197",
      "name": "DATA_MAX",
      "type": "int",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "value": [
        "trc(pow(N,Q))-1",
        [
          {
            "type": "trc",
            "lexeme": "null"
          },
          {
            "type": "(",
            "lexeme": "null"
          },
          {
            "type": "pow",
            "lexeme": "null"
          },
          {
            "type": "(",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "N"
          },
          {
            "type": ",",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "Q"
          },
          {
            "type": ")",
            "lexeme": "null"
          },
          {
            "type": ")",
            "lexeme": "null"
          },
          {
            "type": "-",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "1"
          }
        ]
      ],
      "comment": "The maximal data encoding of a queue"
    },
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "b77062e3-c7eb-4339-b84c-46642b9d3f4c",
      "name": "rate1",
      "type": "real",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "value": [
        "3",
        [
          {
            "type": "nc",
            "lexeme": "3"
          }
        ]
      ],
      "comment": "rate of incomming jobs at station 1"
    },
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "a936a00d-aaab-4913-a77d-d26e82297db3",
      "name": "rate2",
      "type": "real",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "value": [
        "5",
        [
          {
            "type": "nc",
            "lexeme": "5"
          }
        ]
      ],
      "comment": "rate of incomming jobs at station 2"
    },
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "da3f1bc6-7741-492e-bb6e-a56e4915aba9",
      "name": "TIME_BOUND",
      "type": "real",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "value": [
        "5",
        [
          {
            "type": "nc",
            "lexeme": "5"
          }
        ]
      ],
      "comment": ""
    },
    {
      "py/object": "markov_model.Constant.Constant",
      "id": "66986978-2c50-4399-8ab9-70be2cae90e6",
      "name": "fail_prob",
      "type": "real",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "value": [
        "0.1",
        [
          {
            "type": "nc",
            "lexeme": "0.1"
          }
        ]
      ],
      "comment": "Probability that popping an element from a queue fails."
    }
  ],
  "variables": [
    {
      "py/object": "markov_model.Variable.Variable",
      "id": "88e572ef-b124-413b-82c5-e7695bd15ada",
      "name": "transfer_job",
      "type": "int",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "transient": true,
      "initialValue": [
        "N",
        [
          {
            "type": "id",
            "lexeme": "N"
          }
        ]
      ],
      "comment": "Store the type of job (0 to N-1) that is currently transfered to the server. A value of N means that no job is currently transfered"
    },
    {
      "py/object": "markov_model.Variable.Variable",
      "id": "e263376f-1049-4c04-847d-1562fd6e3415",
      "name": "job_processed",
      "type": "int",
      "bounded": false,
      "lowerBound": [
        "",
        []
      ],
      "upperBound": [
        "",
        []
      ],
      "transient": true,
      "initialValue": [
        "0",
        [
          {
            "type": "nc",
            "lexeme": "0"
          }
        ]
      ],
      "comment": "Set to 1 whenever a job was processed."
    }
  ],
  "labels": [],
  "rewards": [],
  "expressions": [],
  "functions": [
    {
      "py/object": "markov_model.Function.Function",
      "id": "29bb9f48-552b-4acb-a9da-06b1c3049743",
      "name": "size_is_empty",
      "type": "bool",
      "parameter": [
        {
          "name": "size",
          "type": "int"
        }
      ],
      "expression": [
        "size=0",
        [
          {
            "type": "id",
            "lexeme": "size"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "0"
          }
        ]
      ]
    },
    {
      "py/object": "markov_model.Function.Function",
      "id": "4d87b97d-0645-4a4e-a4bd-ed177a3bf9d2",
      "name": "size_is_full",
      "type": "bool",
      "parameter": [
        {
          "name": "size",
          "type": "int"
        }
      ],
      "expression": [
        "size=Q",
        [
          {
            "type": "id",
            "lexeme": "size"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "Q"
          }
        ]
      ]
    },
    {
      "py/object": "markov_model.Function.Function",
      "id": "75ca6891-8245-4b70-a183-3009743a20fd",
      "name": "data_pop",
      "type": "int",
      "parameter": [
        {
          "name": "data",
          "type": "int"
        }
      ],
      "expression": [
        "floor(data/N)",
        [
          {
            "type": "floor",
            "lexeme": "null"
          },
          {
            "type": "(",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "data"
          },
          {
            "type": "/",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "N"
          },
          {
            "type": ")",
            "lexeme": "null"
          }
        ]
      ]
    },
    {
      "py/object": "markov_model.Function.Function",
      "id": "f4e5c957-d571-4078-8d41-946e27eab349",
      "name": "size_pop",
      "type": "int",
      "parameter": [
        {
          "name": "size",
          "type": "int"
        }
      ],
      "expression": [
        "size - 1",
        [
          {
            "type": "id",
            "lexeme": "size"
          },
          {
            "type": "-",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "1"
          }
        ]
      ]
    },
    {
      "py/object": "markov_model.Function.Function",
      "id": "2e3df7ef-b6a2-46b6-bee4-9aaf9551f67b",
      "name": "data_push",
      "type": "int",
      "parameter": [
        {
          "name": "data",
          "type": "int"
        },
        {
          "name": "size",
          "type": "int"
        },
        {
          "name": "item",
          "type": "int"
        }
      ],
      "expression": [
        "data+(item*pow(N,size))",
        [
          {
            "type": "id",
            "lexeme": "data"
          },
          {
            "type": "+",
            "lexeme": "null"
          },
          {
            "type": "(",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "item"
          },
          {
            "type": "*",
            "lexeme": "null"
          },
          {
            "type": "pow",
            "lexeme": "null"
          },
          {
            "type": "(",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "N"
          },
          {
            "type": ",",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "size"
          },
          {
            "type": ")",
            "lexeme": "null"
          },
          {
            "type": ")",
            "lexeme": "null"
          }
        ]
      ]
    },
    {
      "py/object": "markov_model.Function.Function",
      "id": "3a46b8d4-ef8e-4e72-a37f-ef9431502c1d",
      "name": "size_push",
      "type": "int",
      "parameter": [
        {
          "name": "size",
          "type": "int"
        }
      ],
      "expression": [
        "size+1",
        [
          {
            "type": "id",
            "lexeme": "size"
          },
          {
            "type": "+",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "1"
          }
        ]
      ]
    },
    {
      "py/object": "markov_model.Function.Function",
      "id": "eac5eba9-204b-4120-8a40-2862e395c94c",
      "name": "data_head",
      "type": "int",
      "parameter": [
        {
          "name": "data",
          "type": "int"
        }
      ],
      "expression": [
        "data % N",
        [
          {
            "type": "id",
            "lexeme": "data"
          },
          {
            "type": "%",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "N"
          }
        ]
      ]
    }
  ],
  "globalSymbolTable": [],
  "automata": [
    {
      "py/object": "markov_model.Automaton.Automaton",
      "id": "dda9a798-fdb8-4be9-a3d7-9eeb412c32b2",
      "name": "station1",
      "restrictInitial": {
        "py/tuple": [
          "",
          []
        ]
      },
      "graph": {
        "py/object": "markov_model.Graph.Graph",
        "nodes": [
          {
            "py/object": "markov_model.EndNode.EndNode",
            "id": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "name": "active",
            "xCordinate": 187.5,
            "yCordinate": 427.5,
            "type": "InitialNode",
            "initialNode": true,
            "transientValues": [],
            "outgoing": [
              "e23ddf85-2fa3-4cdf-ad37-b0e74244a5ee",
              "d0203c65-79db-4177-8534-9eadfe330c9f"
            ],
            "comment": "The station awaits new jobs and supplies queued jobs to the server"
          },
          {
            "py/object": "markov_model.EndNode.EndNode",
            "id": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "name": "new_job",
            "xCordinate": 1057.5,
            "yCordinate": 427.5,
            "type": "Node",
            "initialNode": false,
            "transientValues": [],
            "outgoing": [
              "5743e15e-9615-45ad-9878-ae7ab4a81535",
              "f7a858cd-d0e5-47f5-8a66-9035afe79289",
              "b962f1b6-232f-48ad-be93-5cfd6712accc",
              "f6deede3-4083-4cd0-b76c-ccb67665f137",
              "94ddc713-54d4-4b46-ae7c-4e93124ec9ea",
              "f13f28d5-203d-4896-acf2-8c00e8dfc3cd"
            ],
            "comment": "processes an incoming job"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "b10fd6c6-bf96-4451-a538-36d346ffc527",
            "name": "inter-node-b10fd6c6-bf96-4451-a538-36d346ffc527",
            "xCordinate": 652.5,
            "yCordinate": 427.5,
            "outgoing": [
              "7c5c1763-ed55-48c2-ab59-7d4aa9c32a06"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "139ed264-502a-4bfb-96e8-be55d655dbbb",
            "name": "inter-node-139ed264-502a-4bfb-96e8-be55d655dbbb",
            "xCordinate": 652.5,
            "yCordinate": 22.5,
            "outgoing": [
              "8af2467c-e40d-423f-8ed1-6b319f085e27"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "name": "inter-node-35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "xCordinate": 652.5,
            "yCordinate": 172.5,
            "outgoing": [
              "60f8dca9-670a-416d-8cab-46d1e241d9f5"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "name": "inter-node-b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "xCordinate": 652.5,
            "yCordinate": 322.5,
            "outgoing": [
              "9514acf8-55da-4410-b1c4-1b3e182371b1"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "32c1324a-297a-407c-ab36-da62a975cb7c",
            "name": "inter-node-32c1324a-297a-407c-ab36-da62a975cb7c",
            "xCordinate": 652.5,
            "yCordinate": 547.5,
            "outgoing": [
              "3b62a209-612e-4bff-9a1b-3111c0359906"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "name": "inter-node-47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "xCordinate": 652.5,
            "yCordinate": 697.5,
            "outgoing": [
              "d8602ef2-f7ab-4e4b-b51d-05cdfef4e93a"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "686717d1-cfe9-4f81-8599-08471779bb55",
            "name": "inter-node-686717d1-cfe9-4f81-8599-08471779bb55",
            "xCordinate": 652.5,
            "yCordinate": 862.5,
            "outgoing": [
              "8f5f0001-1d91-466e-82c5-643d917a6151"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "name": "inter-node-cb8c970b-10db-4188-b103-3f9296723ce5",
            "xCordinate": 127.5,
            "yCordinate": 382.5,
            "outgoing": [
              "803bde62-7711-42a9-a07f-126d040de5de",
              "d56671ec-e130-42d9-975f-2a1409c6ef3d"
            ],
            "type": "InterNode"
          }
        ],
        "edges": [
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "e23ddf85-2fa3-4cdf-ad37-b0e74244a5ee",
            "name": "end-inter-e23ddf85-2fa3-4cdf-ad37-b0e74244a5ee",
            "sourceNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "destinationNodeId": "b10fd6c6-bf96-4451-a538-36d346ffc527",
            "type": "EndInterEdge",
            "comment": "",
            "guard": [
              "!size_is_full(current_size)",
              [
                {
                  "type": "!",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "size_is_full"
                },
                {
                  "type": "(",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "current_size"
                },
                {
                  "type": ")",
                  "lexeme": "null"
                }
              ]
            ],
            "action": "",
            "rate": [
              "rate1",
              [
                {
                  "type": "id",
                  "lexeme": "rate1"
                }
              ]
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "7c5c1763-ed55-48c2-ab59-7d4aa9c32a06",
            "name": "inter-end-7c5c1763-ed55-48c2-ab59-7d4aa9c32a06",
            "sourceNodeId": "b10fd6c6-bf96-4451-a538-36d346ffc527",
            "destinationNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": []
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "5743e15e-9615-45ad-9878-ae7ab4a81535",
            "name": "end-inter-5743e15e-9615-45ad-9878-ae7ab4a81535",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "139ed264-502a-4bfb-96e8-be55d655dbbb",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 1",
            "guard": [
              "N>=1",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "8af2467c-e40d-423f-8ed1-6b319f085e27",
            "name": "inter-end-8af2467c-e40d-423f-8ed1-6b319f085e27",
            "sourceNodeId": "139ed264-502a-4bfb-96e8-be55d655dbbb",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "e91d07c7-cc48-48a1-95ad-e701a49d8aee",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 0)",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "0"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "80ccfeca-df35-478e-a6a2-97aa5c915494",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size)",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "f7a858cd-d0e5-47f5-8a66-9035afe79289",
            "name": "end-inter-f7a858cd-d0e5-47f5-8a66-9035afe79289",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 2",
            "guard": [
              "N>=2",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "2"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "60f8dca9-670a-416d-8cab-46d1e241d9f5",
            "name": "inter-end-60f8dca9-670a-416d-8cab-46d1e241d9f5",
            "sourceNodeId": "35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "46611fc9-2408-4aae-aaf7-3deec24aa2ac",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 1)",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "1"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "d75db620-d681-4e46-a6a6-8e3052e620d2",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "b962f1b6-232f-48ad-be93-5cfd6712accc",
            "name": "end-inter-b962f1b6-232f-48ad-be93-5cfd6712accc",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 3",
            "guard": [
              "N >=3",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "3"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "9514acf8-55da-4410-b1c4-1b3e182371b1",
            "name": "inter-end-9514acf8-55da-4410-b1c4-1b3e182371b1",
            "sourceNodeId": "b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "7cc53a6f-27b9-4c9d-a960-5c20ed0a74a1",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 2) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "2"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "da44ded0-3921-43b4-b71d-7dbe6c98c97e",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "f6deede3-4083-4cd0-b76c-ccb67665f137",
            "name": "end-inter-f6deede3-4083-4cd0-b76c-ccb67665f137",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "32c1324a-297a-407c-ab36-da62a975cb7c",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 4",
            "guard": [
              "N>=4",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "4"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "3b62a209-612e-4bff-9a1b-3111c0359906",
            "name": "inter-end-3b62a209-612e-4bff-9a1b-3111c0359906",
            "sourceNodeId": "32c1324a-297a-407c-ab36-da62a975cb7c",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "0c4d30ea-211a-484f-b59d-e0920a26ed9f",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 3) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "3"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "eabef367-389b-4df5-b1a3-7ceacf3e13bc",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "94ddc713-54d4-4b46-ae7c-4e93124ec9ea",
            "name": "end-inter-94ddc713-54d4-4b46-ae7c-4e93124ec9ea",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 5",
            "guard": [
              "N >= 5",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "5"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "d8602ef2-f7ab-4e4b-b51d-05cdfef4e93a",
            "name": "inter-end-d8602ef2-f7ab-4e4b-b51d-05cdfef4e93a",
            "sourceNodeId": "47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "cebb7d1f-0c52-408a-bfec-55ae5f511a87",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 4) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "4"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "98dea4f1-4fa8-484d-a272-9234413b2684",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "f13f28d5-203d-4896-acf2-8c00e8dfc3cd",
            "name": "end-inter-f13f28d5-203d-4896-acf2-8c00e8dfc3cd",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "686717d1-cfe9-4f81-8599-08471779bb55",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 6",
            "guard": [
              "N>=6",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "6"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "8f5f0001-1d91-466e-82c5-643d917a6151",
            "name": "inter-end-8f5f0001-1d91-466e-82c5-643d917a6151",
            "sourceNodeId": "686717d1-cfe9-4f81-8599-08471779bb55",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "d81338bb-a22b-4950-aad0-5b80e6c37c3f",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 5) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "5"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "8b83120f-a94c-4164-8022-f1547de6dc63",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "d0203c65-79db-4177-8534-9eadfe330c9f",
            "name": "end-inter-d0203c65-79db-4177-8534-9eadfe330c9f",
            "sourceNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "destinationNodeId": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "type": "EndInterEdge",
            "comment": "pops from the queue and transfers the job to the server",
            "guard": [
              "!size_is_empty(current_size)",
              [
                {
                  "type": "!",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "size_is_empty"
                },
                {
                  "type": "(",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "current_size"
                },
                {
                  "type": ")",
                  "lexeme": "null"
                }
              ]
            ],
            "action": "send",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "803bde62-7711-42a9-a07f-126d040de5de",
            "name": "inter-end-803bde62-7711-42a9-a07f-126d040de5de",
            "sourceNodeId": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "popping of queue was successful",
            "probability": [
              "1-fail_prob",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                },
                {
                  "type": "-",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "fail_prob"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "21bdff53-1963-4f97-ab3a-7305df7d49b6",
                    "name": "data",
                    "value": [
                      "data_pop(data)",
                      [
                        {
                          "lexeme": "data_pop",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "data",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "bcba1109-cb47-49f3-b961-f039e5896ea1",
                    "name": "current_size",
                    "value": [
                      "size_pop(current_size)",
                      [
                        {
                          "lexeme": "size_pop",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "bc482a24-031f-4b48-b8cc-9fda1464ad4d",
                    "name": "transfer_job",
                    "value": [
                      "data_head(data)",
                      [
                        {
                          "lexeme": "data_head",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "data",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "d56671ec-e130-42d9-975f-2a1409c6ef3d",
            "name": "inter-end-d56671ec-e130-42d9-975f-2a1409c6ef3d",
            "sourceNodeId": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "popping from queue fails with a certain probability",
            "probability": [
              "fail_prob",
              [
                {
                  "type": "id",
                  "lexeme": "fail_prob"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "17666e62-26b8-41b4-83e4-8ba3fe5ff225",
                    "name": "transfer_job",
                    "value": [
                      "data_head(data)",
                      [
                        {
                          "lexeme": "data_head",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "data",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "variables": [
        {
          "py/object": "markov_model.Variable.Variable",
          "id": "8f80c5c6-fbd0-4dda-8709-055c3b5c86aa",
          "name": "data",
          "type": "int",
          "bounded": true,
          "lowerBound": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "upperBound": [
            "DATA_MAX",
            [
              {
                "type": "id",
                "lexeme": "DATA_MAX"
              }
            ]
          ],
          "transient": false,
          "initialValue": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "comment": "Encodes the contents of a FIFO queue with capacity N storing jobs of N different types. The encoding interpretes this as a number to base N where digits are shifted to the left/right in order to perform push/pop operations."
        },
        {
          "py/object": "markov_model.Variable.Variable",
          "id": "f575fd31-bbf2-4a1e-b484-00ada8ac6b37",
          "name": "current_size",
          "type": "int",
          "bounded": true,
          "lowerBound": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "upperBound": [
            "Q",
            [
              {
                "type": "id",
                "lexeme": "Q"
              }
            ]
          ],
          "transient": false,
          "initialValue": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "comment": "The current number of contents in the queue"
        }
      ],
      "expressions": [],
      "functions": [],
      "labels": [
        {
          "py/object": "markov_model.Label.Label",
          "id": "c5e4d6fd-bd81-49bb-ac7b-8db6c6bf00d6",
          "name": "full",
          "value": [
            "size_is_full(current_size)",
            [
              {
                "type": "id",
                "lexeme": "size_is_full"
              },
              {
                "type": "(",
                "lexeme": "null"
              },
              {
                "type": "id",
                "lexeme": "current_size"
              },
              {
                "type": ")",
                "lexeme": "null"
              }
            ]
          ],
          "comment": ""
        }
      ],
      "rewards": [],
      "localSymbolTable": [],
      "comment": "The first station"
    },
    {
      "py/object": "markov_model.Automaton.Automaton",
      "id": "1e98c8ac-5a2d-11eb-87d1-0242ac110002",
      "name": "station2",
      "restrictInitial": {
        "py/tuple": [
          "",
          []
        ]
      },
      "graph": {
        "py/object": "markov_model.Graph.Graph",
        "nodes": [
          {
            "py/object": "markov_model.EndNode.EndNode",
            "id": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "name": "active",
            "xCordinate": 187.5,
            "yCordinate": 427.5,
            "type": "InitialNode",
            "initialNode": true,
            "transientValues": [],
            "outgoing": [
              "e23ddf85-2fa3-4cdf-ad37-b0e74244a5ee",
              "d0203c65-79db-4177-8534-9eadfe330c9f"
            ],
            "comment": "The station awaits new jobs and supplies queued jobs to the server"
          },
          {
            "py/object": "markov_model.EndNode.EndNode",
            "id": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "name": "new_job",
            "xCordinate": 1057.5,
            "yCordinate": 427.5,
            "type": "Node",
            "initialNode": false,
            "transientValues": [],
            "outgoing": [
              "5743e15e-9615-45ad-9878-ae7ab4a81535",
              "f7a858cd-d0e5-47f5-8a66-9035afe79289",
              "b962f1b6-232f-48ad-be93-5cfd6712accc",
              "f6deede3-4083-4cd0-b76c-ccb67665f137",
              "94ddc713-54d4-4b46-ae7c-4e93124ec9ea",
              "f13f28d5-203d-4896-acf2-8c00e8dfc3cd"
            ],
            "comment": "processes an incoming job"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "b10fd6c6-bf96-4451-a538-36d346ffc527",
            "name": "inter-node-b10fd6c6-bf96-4451-a538-36d346ffc527",
            "xCordinate": 652.5,
            "yCordinate": 427.5,
            "outgoing": [
              "7c5c1763-ed55-48c2-ab59-7d4aa9c32a06"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "139ed264-502a-4bfb-96e8-be55d655dbbb",
            "name": "inter-node-139ed264-502a-4bfb-96e8-be55d655dbbb",
            "xCordinate": 652.5,
            "yCordinate": 22.5,
            "outgoing": [
              "8af2467c-e40d-423f-8ed1-6b319f085e27"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "name": "inter-node-35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "xCordinate": 652.5,
            "yCordinate": 172.5,
            "outgoing": [
              "60f8dca9-670a-416d-8cab-46d1e241d9f5"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "name": "inter-node-b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "xCordinate": 652.5,
            "yCordinate": 322.5,
            "outgoing": [
              "9514acf8-55da-4410-b1c4-1b3e182371b1"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "32c1324a-297a-407c-ab36-da62a975cb7c",
            "name": "inter-node-32c1324a-297a-407c-ab36-da62a975cb7c",
            "xCordinate": 652.5,
            "yCordinate": 547.5,
            "outgoing": [
              "3b62a209-612e-4bff-9a1b-3111c0359906"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "name": "inter-node-47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "xCordinate": 652.5,
            "yCordinate": 697.5,
            "outgoing": [
              "d8602ef2-f7ab-4e4b-b51d-05cdfef4e93a"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "686717d1-cfe9-4f81-8599-08471779bb55",
            "name": "inter-node-686717d1-cfe9-4f81-8599-08471779bb55",
            "xCordinate": 652.5,
            "yCordinate": 862.5,
            "outgoing": [
              "8f5f0001-1d91-466e-82c5-643d917a6151"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "name": "inter-node-cb8c970b-10db-4188-b103-3f9296723ce5",
            "xCordinate": 127.5,
            "yCordinate": 382.5,
            "outgoing": [
              "803bde62-7711-42a9-a07f-126d040de5de",
              "d56671ec-e130-42d9-975f-2a1409c6ef3d"
            ],
            "type": "InterNode"
          }
        ],
        "edges": [
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "e23ddf85-2fa3-4cdf-ad37-b0e74244a5ee",
            "name": "end-inter-e23ddf85-2fa3-4cdf-ad37-b0e74244a5ee",
            "sourceNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "destinationNodeId": "b10fd6c6-bf96-4451-a538-36d346ffc527",
            "type": "EndInterEdge",
            "comment": "",
            "guard": [
              "!size_is_full(current_size)",
              [
                {
                  "type": "!",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "size_is_full"
                },
                {
                  "type": "(",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "current_size"
                },
                {
                  "type": ")",
                  "lexeme": "null"
                }
              ]
            ],
            "action": "",
            "rate": [
              "rate2",
              [
                {
                  "type": "id",
                  "lexeme": "rate2"
                }
              ]
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "7c5c1763-ed55-48c2-ab59-7d4aa9c32a06",
            "name": "inter-end-7c5c1763-ed55-48c2-ab59-7d4aa9c32a06",
            "sourceNodeId": "b10fd6c6-bf96-4451-a538-36d346ffc527",
            "destinationNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": []
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "5743e15e-9615-45ad-9878-ae7ab4a81535",
            "name": "end-inter-5743e15e-9615-45ad-9878-ae7ab4a81535",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "139ed264-502a-4bfb-96e8-be55d655dbbb",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 1",
            "guard": [
              "N>=1",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "8af2467c-e40d-423f-8ed1-6b319f085e27",
            "name": "inter-end-8af2467c-e40d-423f-8ed1-6b319f085e27",
            "sourceNodeId": "139ed264-502a-4bfb-96e8-be55d655dbbb",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "e91d07c7-cc48-48a1-95ad-e701a49d8aee",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 0)",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "0"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "80ccfeca-df35-478e-a6a2-97aa5c915494",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size)",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "f7a858cd-d0e5-47f5-8a66-9035afe79289",
            "name": "end-inter-f7a858cd-d0e5-47f5-8a66-9035afe79289",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 2",
            "guard": [
              "N>=2",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "2"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "60f8dca9-670a-416d-8cab-46d1e241d9f5",
            "name": "inter-end-60f8dca9-670a-416d-8cab-46d1e241d9f5",
            "sourceNodeId": "35f2e564-86f4-4422-ba4c-7cc4aa9bdaf9",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "46611fc9-2408-4aae-aaf7-3deec24aa2ac",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 1)",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "1"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "d75db620-d681-4e46-a6a6-8e3052e620d2",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "b962f1b6-232f-48ad-be93-5cfd6712accc",
            "name": "end-inter-b962f1b6-232f-48ad-be93-5cfd6712accc",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 3",
            "guard": [
              "N >=3",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "3"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "9514acf8-55da-4410-b1c4-1b3e182371b1",
            "name": "inter-end-9514acf8-55da-4410-b1c4-1b3e182371b1",
            "sourceNodeId": "b7cc9c9f-4d4c-4c27-a38c-bfa63877b504",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "7cc53a6f-27b9-4c9d-a960-5c20ed0a74a1",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 2) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "2"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "da44ded0-3921-43b4-b71d-7dbe6c98c97e",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "f6deede3-4083-4cd0-b76c-ccb67665f137",
            "name": "end-inter-f6deede3-4083-4cd0-b76c-ccb67665f137",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "32c1324a-297a-407c-ab36-da62a975cb7c",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 4",
            "guard": [
              "N>=4",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "4"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "3b62a209-612e-4bff-9a1b-3111c0359906",
            "name": "inter-end-3b62a209-612e-4bff-9a1b-3111c0359906",
            "sourceNodeId": "32c1324a-297a-407c-ab36-da62a975cb7c",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "0c4d30ea-211a-484f-b59d-e0920a26ed9f",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 3) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "3"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "eabef367-389b-4df5-b1a3-7ceacf3e13bc",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "94ddc713-54d4-4b46-ae7c-4e93124ec9ea",
            "name": "end-inter-94ddc713-54d4-4b46-ae7c-4e93124ec9ea",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 5",
            "guard": [
              "N >= 5",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "5"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "d8602ef2-f7ab-4e4b-b51d-05cdfef4e93a",
            "name": "inter-end-d8602ef2-f7ab-4e4b-b51d-05cdfef4e93a",
            "sourceNodeId": "47ea5e69-41e5-4dc8-8567-a2316726f5be",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "cebb7d1f-0c52-408a-bfec-55ae5f511a87",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 4) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "4"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "98dea4f1-4fa8-484d-a272-9234413b2684",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "f13f28d5-203d-4896-acf2-8c00e8dfc3cd",
            "name": "end-inter-f13f28d5-203d-4896-acf2-8c00e8dfc3cd",
            "sourceNodeId": "4a8a871a-6a63-436f-acbd-1bae7f00aca8",
            "destinationNodeId": "686717d1-cfe9-4f81-8599-08471779bb55",
            "type": "EndInterEdge",
            "comment": "enqueue job of type 6",
            "guard": [
              "N>=6",
              [
                {
                  "type": "id",
                  "lexeme": "N"
                },
                {
                  "type": ">=",
                  "lexeme": "null"
                },
                {
                  "type": "nc",
                  "lexeme": "6"
                }
              ]
            ],
            "action": "",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "8f5f0001-1d91-466e-82c5-643d917a6151",
            "name": "inter-end-8f5f0001-1d91-466e-82c5-643d917a6151",
            "sourceNodeId": "686717d1-cfe9-4f81-8599-08471779bb55",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "d81338bb-a22b-4950-aad0-5b80e6c37c3f",
                    "name": "data",
                    "value": [
                      "data_push(data, current_size, 5) ",
                      [
                        {
                          "type": "id",
                          "lexeme": "data_push"
                        },
                        {
                          "type": "(",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "data"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "id",
                          "lexeme": "current_size"
                        },
                        {
                          "type": ",",
                          "lexeme": "null"
                        },
                        {
                          "type": "nc",
                          "lexeme": "5"
                        },
                        {
                          "type": ")",
                          "lexeme": "null"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "8b83120f-a94c-4164-8022-f1547de6dc63",
                    "name": "current_size",
                    "value": [
                      "size_push(current_size) ",
                      [
                        {
                          "lexeme": "size_push",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "d0203c65-79db-4177-8534-9eadfe330c9f",
            "name": "end-inter-d0203c65-79db-4177-8534-9eadfe330c9f",
            "sourceNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "destinationNodeId": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "type": "EndInterEdge",
            "comment": "pops from the queue and transfers the job to the server",
            "guard": [
              "!size_is_empty(current_size)",
              [
                {
                  "type": "!",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "size_is_empty"
                },
                {
                  "type": "(",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "current_size"
                },
                {
                  "type": ")",
                  "lexeme": "null"
                }
              ]
            ],
            "action": "send",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "803bde62-7711-42a9-a07f-126d040de5de",
            "name": "inter-end-803bde62-7711-42a9-a07f-126d040de5de",
            "sourceNodeId": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "popping of queue was successful",
            "probability": [
              "1-fail_prob",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                },
                {
                  "type": "-",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "fail_prob"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "21bdff53-1963-4f97-ab3a-7305df7d49b6",
                    "name": "data",
                    "value": [
                      "data_pop(data)",
                      [
                        {
                          "lexeme": "data_pop",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "data",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "bcba1109-cb47-49f3-b961-f039e5896ea1",
                    "name": "current_size",
                    "value": [
                      "size_pop(current_size)",
                      [
                        {
                          "lexeme": "size_pop",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "current_size",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "bc482a24-031f-4b48-b8cc-9fda1464ad4d",
                    "name": "transfer_job",
                    "value": [
                      "data_head(data)",
                      [
                        {
                          "lexeme": "data_head",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "data",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "d56671ec-e130-42d9-975f-2a1409c6ef3d",
            "name": "inter-end-d56671ec-e130-42d9-975f-2a1409c6ef3d",
            "sourceNodeId": "cb8c970b-10db-4188-b103-3f9296723ce5",
            "destinationNodeId": "371760c4-74b2-4aad-a1c2-a17ece07d104",
            "type": "InterEndEdge",
            "comment": "popping from queue fails with a certain probability",
            "probability": [
              "fail_prob",
              [
                {
                  "type": "id",
                  "lexeme": "fail_prob"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "17666e62-26b8-41b4-83e4-8ba3fe5ff225",
                    "name": "transfer_job",
                    "value": [
                      "data_head(data)",
                      [
                        {
                          "lexeme": "data_head",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": "("
                        },
                        {
                          "lexeme": "data",
                          "type": "id"
                        },
                        {
                          "lexeme": "null",
                          "type": ")"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "variables": [
        {
          "py/object": "markov_model.Variable.Variable",
          "id": "8f80c5c6-fbd0-4dda-8709-055c3b5c86aa",
          "name": "data",
          "type": "int",
          "bounded": true,
          "lowerBound": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "upperBound": [
            "DATA_MAX",
            [
              {
                "type": "id",
                "lexeme": "DATA_MAX"
              }
            ]
          ],
          "transient": false,
          "initialValue": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "comment": "Encodes the contents of a FIFO queue with capacity N storing jobs of N different types. The encoding interpretes this as a number to base N where digits are shifted to the left/right in order to perform push/pop operations."
        },
        {
          "py/object": "markov_model.Variable.Variable",
          "id": "f575fd31-bbf2-4a1e-b484-00ada8ac6b37",
          "name": "current_size",
          "type": "int",
          "bounded": true,
          "lowerBound": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "upperBound": [
            "Q",
            [
              {
                "type": "id",
                "lexeme": "Q"
              }
            ]
          ],
          "transient": false,
          "initialValue": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "comment": "The current number of contents in the queue"
        }
      ],
      "expressions": [],
      "functions": [],
      "labels": [
        {
          "py/object": "markov_model.Label.Label",
          "id": "2ef8a98e-a997-48e0-b7bb-0bfeddb2cf4e",
          "name": "full",
          "value": [
            "size_is_full(current_size)",
            [
              {
                "type": "id",
                "lexeme": "size_is_full"
              },
              {
                "type": "(",
                "lexeme": "null"
              },
              {
                "type": "id",
                "lexeme": "current_size"
              },
              {
                "type": ")",
                "lexeme": "null"
              }
            ]
          ],
          "comment": ""
        }
      ],
      "rewards": [],
      "localSymbolTable": [],
      "comment": "The second station"
    },
    {
      "py/object": "markov_model.Automaton.Automaton",
      "id": "911c95b8-9749-4c23-8c84-95535c42930b",
      "name": "server",
      "restrictInitial": {
        "py/tuple": [
          "",
          []
        ]
      },
      "graph": {
        "py/object": "markov_model.Graph.Graph",
        "nodes": [
          {
            "py/object": "markov_model.EndNode.EndNode",
            "id": "c5c43519-e8e8-493e-ac58-c618f187c625",
            "name": "idle",
            "xCordinate": 307.5,
            "yCordinate": 292.5,
            "type": "InitialNode",
            "initialNode": true,
            "transientValues": [],
            "outgoing": [
              "1def65d3-9d08-45a4-8cc3-696c1af0be9d"
            ],
            "comment": "The server waits for new jobs to arrive"
          },
          {
            "py/object": "markov_model.EndNode.EndNode",
            "id": "c7b16371-071d-442d-b191-3bd53c165d11",
            "name": "processing",
            "xCordinate": 712.5,
            "yCordinate": 292.5,
            "type": "Node",
            "initialNode": false,
            "transientValues": [],
            "outgoing": [
              "d43ccb5f-c268-4486-8669-8b35b994ea02"
            ],
            "comment": "The server processes a job"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "98e2f480-c281-4156-8f88-e6498dd365c7",
            "name": "inter-node-98e2f480-c281-4156-8f88-e6498dd365c7",
            "xCordinate": 502.5,
            "yCordinate": 187.5,
            "outgoing": [
              "302797ff-188e-4860-822e-edfdfe234de0"
            ],
            "type": "InterNode"
          },
          {
            "py/object": "markov_model.Node.Node",
            "id": "03d1fe8a-907c-4340-a125-155526857038",
            "name": "inter-node-03d1fe8a-907c-4340-a125-155526857038",
            "xCordinate": 502.5,
            "yCordinate": 397.5,
            "outgoing": [
              "f4d16974-662e-4936-9678-23fe397bca19"
            ],
            "type": "InterNode"
          }
        ],
        "edges": [
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "1def65d3-9d08-45a4-8cc3-696c1af0be9d",
            "name": "end-inter-1def65d3-9d08-45a4-8cc3-696c1af0be9d",
            "sourceNodeId": "c5c43519-e8e8-493e-ac58-c618f187c625",
            "destinationNodeId": "98e2f480-c281-4156-8f88-e6498dd365c7",
            "type": "EndInterEdge",
            "comment": "A new job arrives",
            "guard": [
              "true",
              [
                {
                  "type": "true",
                  "lexeme": "null"
                }
              ]
            ],
            "action": "receive",
            "rate": [
              "",
              []
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "302797ff-188e-4860-822e-edfdfe234de0",
            "name": "inter-end-302797ff-188e-4860-822e-edfdfe234de0",
            "sourceNodeId": "98e2f480-c281-4156-8f88-e6498dd365c7",
            "destinationNodeId": "c7b16371-071d-442d-b191-3bd53c165d11",
            "type": "InterEndEdge",
            "comment": "",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  1,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "451743ea-0870-4560-a83d-d0d7d28cfb5a",
                    "name": "current_job",
                    "value": [
                      "transfer_job",
                      [
                        {
                          "type": "id",
                          "lexeme": "transfer_job"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          {
            "py/object": "markov_model.EndToInter.EndToInter",
            "id": "d43ccb5f-c268-4486-8669-8b35b994ea02",
            "name": "end-inter-d43ccb5f-c268-4486-8669-8b35b994ea02",
            "sourceNodeId": "c7b16371-071d-442d-b191-3bd53c165d11",
            "destinationNodeId": "03d1fe8a-907c-4340-a125-155526857038",
            "type": "EndInterEdge",
            "comment": "",
            "guard": [
              "true",
              [
                {
                  "type": "true",
                  "lexeme": "null"
                }
              ]
            ],
            "action": "",
            "rate": [
              "processing_rate(current_job)",
              [
                {
                  "type": "id",
                  "lexeme": "processing_rate"
                },
                {
                  "type": "(",
                  "lexeme": "null"
                },
                {
                  "type": "id",
                  "lexeme": "current_job"
                },
                {
                  "type": ")",
                  "lexeme": "null"
                }
              ]
            ]
          },
          {
            "py/object": "markov_model.InterToEnd.InterToEnd",
            "id": "f4d16974-662e-4936-9678-23fe397bca19",
            "name": "inter-end-f4d16974-662e-4936-9678-23fe397bca19",
            "sourceNodeId": "03d1fe8a-907c-4340-a125-155526857038",
            "destinationNodeId": "c5c43519-e8e8-493e-ac58-c618f187c625",
            "type": "InterEndEdge",
            "comment": "reset current job",
            "probability": [
              "1",
              [
                {
                  "type": "nc",
                  "lexeme": "1"
                }
              ]
            ],
            "indexAssignments": [
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "ee92061e-e51c-4a54-963a-4d1517107ffc",
                    "name": "current_job",
                    "value": [
                      "N",
                      [
                        {
                          "type": "id",
                          "lexeme": "N"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "py/tuple": [
                  0,
                  {
                    "py/object": "markov_model.Assignment.Assignment",
                    "id": "07151202-a510-4265-8f89-6b2bffe784da",
                    "name": "job_processed",
                    "value": [
                      "1",
                      [
                        {
                          "type": "nc",
                          "lexeme": "1"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "variables": [
        {
          "py/object": "markov_model.Variable.Variable",
          "id": "a19026ae-76af-4953-9285-bb9108cf7d20",
          "name": "current_job",
          "type": "int",
          "bounded": true,
          "lowerBound": [
            "0",
            [
              {
                "type": "nc",
                "lexeme": "0"
              }
            ]
          ],
          "upperBound": [
            "N",
            [
              {
                "type": "id",
                "lexeme": "N"
              }
            ]
          ],
          "transient": false,
          "initialValue": [
            "N",
            [
              {
                "type": "id",
                "lexeme": "N"
              }
            ]
          ],
          "comment": "The currently processed job type (0 to N-1). A value of N indicates that no job is currently processed."
        }
      ],
      "expressions": [],
      "functions": [
        {
          "py/object": "markov_model.Function.Function",
          "id": "a1c642b3-bedd-4a85-8968-7a54164e9270",
          "name": "processing_rate",
          "type": "real",
          "parameter": [
            {
              "name": "jobtype",
              "type": "int"
            }
          ],
          "expression": [
            "2 * (jobtype+1)",
            [
              {
                "type": "nc",
                "lexeme": "2"
              },
              {
                "type": "*",
                "lexeme": "null"
              },
              {
                "type": "(",
                "lexeme": "null"
              },
              {
                "type": "id",
                "lexeme": "jobtype"
              },
              {
                "type": "+",
                "lexeme": "null"
              },
              {
                "type": "nc",
                "lexeme": "1"
              },
              {
                "type": ")",
                "lexeme": "null"
              }
            ]
          ]
        }
      ],
      "labels": [],
      "rewards": [],
      "localSymbolTable": [],
      "comment": "The server processing jobs arriving at the stations"
    }
  ],
  "properties": [
    {
      "py/object": "markov_model.Property.Property",
      "id": "40746a4a-f4ff-49ca-9039-99f8466bfbde",
      "name": "PminBothFullIsOne",
      "operation": "values",
      "property": [
        "Pmin>=1 [F \"station1.full\" & \"station2.full\"]",
        [
          {
            "type": "P",
            "lexeme": "null"
          },
          {
            "type": "min",
            "lexeme": "null"
          },
          {
            "type": ">=",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "1"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "F",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station1.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "&",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station2.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The minimum probability that both queues are full is one."
    },
    {
      "py/object": "markov_model.Property.Property",
      "id": "7d216834-466c-4709-83d4-4da851cd8d2a",
      "name": "TminBothFull",
      "operation": "values",
      "property": [
        "R{\"1\"}[state]min=? [F \"station1.full\" & \"station2.full\"]",
        [
          {
            "type": "R",
            "lexeme": "null"
          },
          {
            "type": "{",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "1"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "}",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "state",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          },
          {
            "type": "min",
            "lexeme": "null"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "?",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "F",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station1.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "&",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station2.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The minimum expected time until both queues are full."
    },
    {
      "py/object": "markov_model.Property.Property",
      "id": "b58836cc-2a64-4648-bee8-1e7283c9be8b",
      "name": "TmaxBothFull",
      "operation": "values",
      "property": [
        "R{\"1\"}[state]max=? [F \"station1.full\" & \"station2.full\"] ",
        [
          {
            "type": "R",
            "lexeme": "null"
          },
          {
            "type": "{",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "nc",
            "lexeme": "1"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "}",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "state",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          },
          {
            "type": "max",
            "lexeme": "null"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "?",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "F",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station1.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "&",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station2.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The maximum expected time until both queues are full."
    },
    {
      "py/object": "markov_model.Property.Property",
      "id": "16f048d9-fbc9-496e-9d88-d7090f9deeaa",
      "name": "PmaxBothFullBound",
      "operation": "values",
      "property": [
        "Pmax=? [F<=TIME_BOUND \"station1.full\" & \"station2.full\"]",
        [
          {
            "type": "P",
            "lexeme": "null"
          },
          {
            "type": "max",
            "lexeme": "null"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "?",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "F",
            "lexeme": "null"
          },
          {
            "type": "<=",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "TIME_BOUND"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station1.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "&",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station2.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The maximum probability that both queues are full within the time bound."
    },
    {
      "py/object": "markov_model.Property.Property",
      "id": "3fcc45e9-772f-47ef-9b4e-6fcf13db2708",
      "name": "SmaxBothFull",
      "operation": "values",
      "property": [
        "LRAmax=? [ \"station1.full\" & \"station2.full\" ]",
        [
          {
            "type": "LRA",
            "lexeme": "null"
          },
          {
            "type": "max",
            "lexeme": "null"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "?",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station1.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "&",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station2.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The Long-run probability that both queues are full."
    },
    {
      "py/object": "markov_model.Property.Property",
      "id": "0ad8b560-7b44-4c2c-bc40-4ecfd0b952c3",
      "name": "RminJobsUntilFull",
      "operation": "values",
      "property": [
        "R{\"job_processed\"}[transition]min=? [F \"station1.full\" & \"station2.full\"]",
        [
          {
            "type": "R",
            "lexeme": "null"
          },
          {
            "type": "{",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "job_processed"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "}",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "transition",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          },
          {
            "type": "min",
            "lexeme": "null"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "?",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "F",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station1.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "&",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "station2.full"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The minimal expected number of jobs that can be processed until both queues are full."
    },
    {
      "py/object": "markov_model.Property.Property",
      "id": "85bb1b62-f74e-4abb-9c3c-a19169662bdf",
      "name": "SminJobs",
      "operation": "values",
      "property": [
        "R{\"job_processed\"}[transition]min=? [LRA]",
        [
          {
            "type": "R",
            "lexeme": "null"
          },
          {
            "type": "{",
            "lexeme": "null"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "id",
            "lexeme": "job_processed"
          },
          {
            "type": "\"",
            "lexeme": "null"
          },
          {
            "type": "}",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "transition",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          },
          {
            "type": "min",
            "lexeme": "null"
          },
          {
            "type": "=",
            "lexeme": "null"
          },
          {
            "type": "?",
            "lexeme": "null"
          },
          {
            "type": "[",
            "lexeme": "null"
          },
          {
            "type": "LRA",
            "lexeme": "null"
          },
          {
            "type": "]",
            "lexeme": "null"
          }
        ]
      ],
      "stateLabel": [
        "initial",
        []
      ],
      "comment": "The minimal expected long-run average number of processed jobs"
    }
  ],
  "elements": [
    {
      "py/object": "markov_model.Element.Element",
      "id": "4abed9b9-6297-4ed3-9ae8-35d45d957258",
      "name": "station1",
      "modelId": "dda9a798-fdb8-4be9-a3d7-9eeb412c32b2",
      "modelName": "station1"
    },
    {
      "py/object": "markov_model.Element.Element",
      "id": "b43ca0c5-6366-4ceb-b260-d407bc8f089f",
      "name": "station2",
      "modelId": "1e98c8ac-5a2d-11eb-87d1-0242ac110002",
      "modelName": "station2"
    },
    {
      "py/object": "markov_model.Element.Element",
      "id": "ee309570-ae02-46ea-a863-84e5d70ba6cf",
      "name": "server",
      "modelId": "911c95b8-9749-4c23-8c84-95535c42930b",
      "modelName": "server"
    }
  ],
  "syncs": [
    {
      "py/object": "markov_model.Sync.Sync",
      "id": "59fed9dc-566b-4e5b-aa5c-9a78c8da0880",
      "actions": {
        "4abed9b9-6297-4ed3-9ae8-35d45d957258": "send",
        "b43ca0c5-6366-4ceb-b260-d407bc8f089f": "null",
        "ee309570-ae02-46ea-a863-84e5d70ba6cf": "receive"
      }
    },
    {
      "py/object": "markov_model.Sync.Sync",
      "id": "375e5ae8-08b9-4917-ab36-7e9bed766171",
      "actions": {
        "4abed9b9-6297-4ed3-9ae8-35d45d957258": "null",
        "b43ca0c5-6366-4ceb-b260-d407bc8f089f": "send",
        "ee309570-ae02-46ea-a863-84e5d70ba6cf": "receive"
      }
    }
  ],
  "configuration": {
    "engine": {
      "values": [
        "sparse",
        "hybrid",
        "dd",
        "dd-to-sparse"
      ],
      "selected": "sparse"
    },
    "bisimulation": {
      "values": [
        true,
        false
      ],
      "selected": false
    }
  }
}